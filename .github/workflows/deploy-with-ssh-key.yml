name: Deploy Full Stack with SSH Key

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 212.8.227.80 >> ~/.ssh/known_hosts
      
    - name: Deploy Full Stack to Server
      run: |
        ssh -i ~/.ssh/id_rsa root@212.8.227.80 << 'EOF'
          echo "🚀 Starting full stack deployment..."
          
          # Обновление системы и установка базовых пакетов
          apt update
          apt install -y curl git wget software-properties-common apt-transport-https ca-certificates gnupg lsb-release
          
          # Установка Docker если не установлен
          if ! command -v docker &> /dev/null; then
            echo "🐳 Installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            rm get-docker.sh
          fi
          
          # Установка Docker Compose если не установлен
          if ! command -v docker-compose &> /dev/null; then
            echo "🐙 Installing Docker Compose..."
            curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
          fi
          
          # Запуск Docker
          systemctl start docker
          systemctl enable docker
          
          # Создание директории проекта
          mkdir -p /var/www
          cd /var/www
          
          # Остановка контейнеров
          if [ -d "dshina" ]; then
            cd dshina
            docker-compose down 2>/dev/null || true
            docker system prune -f
            cd ..
          fi
          
          # Клонирование проекта
          rm -rf dshina
          git clone ${{ github.server_url }}/${{ github.repository }}.git dshina
          cd dshina
          git checkout ${{ github.ref_name }}
          
          # Создание .env файла
          cat > .env << 'EOL'
          NODE_ENV=production
          PORT=4000
          NEXT_PUBLIC_BASE_URL=http://212.8.227.80:4000
          BOT_TOKEN=your-telegram-bot-token
          CHAT_ID=your-telegram-chat-id
          EOL
          
          echo "🏗️ Building and starting services..."
          docker-compose build --no-cache
          docker-compose up -d
          
          echo "⏳ Waiting for services..."
          sleep 60
          
          echo "📊 Services status:"
          docker-compose ps
          
          echo "✅ Deployment completed!"
          echo "Frontend: http://212.8.227.80:3000"
          echo "Backend: http://212.8.227.80:4000"
        EOF