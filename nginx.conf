events {
    worker_connections 1024;
}

http {
    # Upstream серверы
    upstream backend {
        server backend:4000;
    }

    upstream frontend {
        server frontend:3000;
    }

    upstream telegram-bot {
        server telegram-bot:3001;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=backend:10m rate=15r/s;

    # Редирект блок (закомментирован)
    # server {
    #     listen 80;
    #     server_name dmshina.ru www.dmshina.ru;
    #     
    #     # Для Let's Encrypt certbot verification
    #     location /.well-known/acme-challenge/ {
    #         root /var/www/certbot;
    #     }
    #     
    #     # Редирект всего остального трафика на основной сервер
    #     location / {
    #         return 301 http://dmshina.ru$request_uri;
    #     }
    # }

    # Редирект IP-адреса на домен
    # server {
    #     listen 80;
    #     # listen 443 ssl http2;
    #     server_name 212.8.227.80;
    #     
    #     # SSL сертификаты (нужны для HTTPS по IP)
    #     # ssl_certificate /etc/letsencrypt/live/dmshina.ru/fullchain.pem;
    #     # ssl_certificate_key /etc/letsencrypt/live/dmshina.ru/privkey.pem;
    #     
    #     return 301 https://dmshina.ru$request_uri;
    # }

    # HTTP сервер
    server {
        listen 80;
        server_name dmshina.ru www.dmshina.ru 212.8.227.80;

        # Пути к SSL сертификатам (замените на реальные пути)
        # ssl_certificate /etc/letsencrypt/live/dmshina.ru/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/dmshina.ru/privkey.pem;

        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Backend API
        location /api/ {
            limit_req zone=backend burst=10 nodelay;
            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "https://dmshina.ru" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # Telegram Bot API
        location /telegram/ {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://telegram-bot/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }

        # Frontend
        location / {
            limit_req zone=frontend burst=20 nodelay;
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Статические файлы (опционально)
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Обработка ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Редирект www на non-www (опционально)
    # server {
    #     # listen 443 ssl http2;
    #     server_name www.dmshina.ru;
    #     # ssl_certificate /etc/letsencrypt/live/dmshina.ru/fullchain.pem;
    #     # ssl_certificate_key /etc/letsencrypt/live/dmshina.ru/privkey.pem;
    #     return 301 https://dmshina.ru$request_uri;
    # }
}